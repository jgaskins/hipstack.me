var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$theStackClass = function (model) {
	return _elm_lang$core$Native_Utils.eq(model.stackSelected, true) ? 'the-stack' : '';
};
var _user$project$Main$randomHipStack = function (i) {
	var deployedTo = A2(
		_elm_lang$core$Maybe$withDefault,
		'',
		_elm_lang$core$List$head(
			A2(
				_elm_lang$core$List$drop,
				i,
				_elm_lang$core$Native_List.fromArray(
					['Heroku', 'Amazon S3', 'Amazon Lambda', 'Digital Ocean', 'GitHub Pages', 'Surge']))));
	var deployedWith = A2(
		_elm_lang$core$Maybe$withDefault,
		'',
		_elm_lang$core$List$head(
			A2(
				_elm_lang$core$List$drop,
				i,
				_elm_lang$core$Native_List.fromArray(
					['Terraform', 'Capistrano', 'Mina', 'Chef', 'Puppet', 'Ansible']))));
	var api = A2(
		_elm_lang$core$Maybe$withDefault,
		'',
		_elm_lang$core$List$head(
			A2(
				_elm_lang$core$List$drop,
				i,
				_elm_lang$core$Native_List.fromArray(
					['HAPI', 'NodeJS', 'Rails-API', 'Elixir/Phoenix', 'GO', 'PHP']))));
	var mobile = A2(
		_elm_lang$core$Maybe$withDefault,
		'',
		_elm_lang$core$List$head(
			A2(
				_elm_lang$core$List$drop,
				i,
				_elm_lang$core$Native_List.fromArray(
					['Xamarin', 'Ionic', 'Titanium', 'React-Native', 'Pure Android', 'Native iOS']))));
	var buildTool = A2(
		_elm_lang$core$Maybe$withDefault,
		'',
		_elm_lang$core$List$head(
			A2(
				_elm_lang$core$List$drop,
				i,
				_elm_lang$core$Native_List.fromArray(
					['Gulp', 'Grunt', 'Ember-CLI', 'Yeoman', 'Webpack', 'bespoke build pipeline']))));
	var mods = A2(
		_elm_lang$core$String$join,
		' and ',
		A2(
			_elm_lang$core$List$take,
			2,
			A2(
				_elm_lang$core$List$drop,
				i,
				_elm_lang$core$Native_List.fromArray(
					['Server-Less Architecture', 'ImmutableJS', 'ES2016 Classes', 'Redux', 'FalcorJS', 'Isomorphic Code']))));
	var frontEnd = A2(
		_elm_lang$core$Maybe$withDefault,
		'',
		_elm_lang$core$List$head(
			A2(
				_elm_lang$core$List$drop,
				i,
				_elm_lang$core$Native_List.fromArray(
					['React', 'Angular 2', 'Ember', 'Mithril', 'Elm', 'VueJS']))));
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'You should build a ',
		A2(
			_elm_lang$core$Basics_ops['++'],
			frontEnd,
			A2(
				_elm_lang$core$Basics_ops['++'],
				' application with ',
				A2(
					_elm_lang$core$Basics_ops['++'],
					mods,
					A2(
						_elm_lang$core$Basics_ops['++'],
						'. Your build pipeline should be ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							buildTool,
							A2(
								_elm_lang$core$Basics_ops['++'],
								'. Obvs we\'ll build a mobile app with ',
								A2(
									_elm_lang$core$Basics_ops['++'],
									mobile,
									A2(
										_elm_lang$core$Basics_ops['++'],
										' served by a ',
										A2(
											_elm_lang$core$Basics_ops['++'],
											api,
											A2(
												_elm_lang$core$Basics_ops['++'],
												'. And we\'ll totes deploy with ',
												A2(
													_elm_lang$core$Basics_ops['++'],
													deployedWith,
													A2(
														_elm_lang$core$Basics_ops['++'],
														' to ',
														A2(_elm_lang$core$Basics_ops['++'], deployedTo, '. (unless something else is new hotness by now).'))))))))))))));
};
var _user$project$Main$initModel = {
	selectedStack: '',
	stackSelected: false,
	selectionButtonText: 'Select You a HipStack!',
	seed: _elm_lang$core$Random$initialSeed(42)
};
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$initModel, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$Model = F4(
	function (a, b, c, d) {
		return {selectedStack: a, stackSelected: b, selectionButtonText: c, seed: d};
	});
var _user$project$Main$NewStack = function (a) {
	return {ctor: 'NewStack', _0: a};
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'SelectStack') {
			return {
				ctor: '_Tuple2',
				_0: model,
				_1: A2(
					_elm_lang$core$Random$generate,
					_user$project$Main$NewStack,
					A2(_elm_lang$core$Random$int, 0, 5))
			};
		} else {
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{
						stackSelected: true,
						selectedStack: _user$project$Main$randomHipStack(_p0._0),
						selectionButtonText: 'Select You (another) Hipstack!'
					}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		}
	});
var _user$project$Main$SelectStack = {ctor: 'SelectStack'};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('container')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('stack-selection')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class(
								_user$project$Main$theStackClass(model))
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text(model.selectedStack)
							])),
						A2(
						_elm_lang$html$Html$button,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Events$onClick(_user$project$Main$SelectStack)
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text(model.selectionButtonText)
							]))
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('love')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('This app is built with love by @jwo from Sugar Land, TX with Elm and Webpack, deployed to GitHub Pages')
					]))
			]));
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{init: _user$project$Main$init, update: _user$project$Main$update, view: _user$project$Main$view, subscriptions: _user$project$Main$subscriptions})
};
